const { Scenes, Markup } = require("telegraf");
const { adminCheck } = require("../middlewares/adminCheck");

const channelsToSubscribe = [
  { text: "–Ø–ø–æ–Ω—Å–∫–∏–π —Å –º–∏—á–∏", url: "https://google.com" },
  { text: "–Ø–ø–æ–Ω—Å–∫–∏–π —Å–ø–∞–ø–∞", url: "https://google.com" },
];

const searchScene = new Scenes.BaseScene("search");

searchScene.enter((ctx) => {
  ctx.reply("üîé –î–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ö–û–î —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞", Markup.removeKeyboard(true));

});

searchScene.command("change_channels", adminCheck, (ctx) => {
  ctx.scene.enter("changeChannels");
});

searchScene.on("text", (ctx) => {
  ctx.reply(
    "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –Ω–∏–∂–µ:",
    Markup.inlineKeyboard([
      ...channelsToSubscribe.map((channel) => [
        Markup.button.url(channel.text, channel.url),
      ]),
      [Markup.button.callback("–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", "subscribed")],
    ])
      .oneTime()
      .resize()
  );
});

module.exports = { searchScene };
